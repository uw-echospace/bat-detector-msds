from pathlib import Path

from koogu import train
from koogu.data import feeder, preprocess
from koogu.model import architectures

from call_segmenter import segment_bat_calls

"""
Production (Prediction) Pipeline:
    Input: big wave file
    Step 1: Segment bat calls from larger wav file
    Step 2: preprocessing (e.g. resampling, normalisation, spectrogramming, et c.)
    Step 3: Classification
    Ouptput: List of bat call locations and associated classification (species of bat and type of call (e.g. social or feeding)

The training pipeline will replace the classification step with a training step, and may have a intervention point for humans to 
    review the segmenter's output and correct any errors.
"""

### Define the actual pipeline 
def pipeline_full(input_wav: str):
    # 1: segment
    segment_bat_calls(Path(input_wav), Path("Path/to/destination"))

    # 2: preprocess (maybe this step is swapped or combined with 1)
    # TODO

    # 3: train


# if main module 
if __name__ == "__main__":
    input_wav = "TODO" # Get from commandline or config filfe
    pipeline_full(input_wav)
    